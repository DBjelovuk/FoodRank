{"version":3,"sources":["logo.svg","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","highChartSyncHeight","chart","this","trimCount","series","Object","toConsumableArray","checkVisible","s","visible","every","reverse","extraHeight","window","innerWidth","legend","legendHeight","setSize","undefined","length","foodDB","firebaseDoc","hiddenFoods","JSON","parse","localStorage","getItem","highChartConfig","type","marginTop","spacingTop","spacingRight","spacingLeft","events","load","call","title","xAxis","padding","yAxis","endOnTick","labels","enabled","tickInterval","colors","tooltip","headerFormat","pointFormat","plotOptions","grouping","pointWidth","legendItemClick","push","name","splice","indexOf","setItem","stringify","layout","align","verticalAlign","borderWidth","backgroundColor","shadow","symbolWidth","itemMarginTop","itemMarginBottom","text","navigation","credits","data","responsive","rules","condition","maxWidth","chartOptions","margin","defaults","calories","protein","weight","firebase","firestore","settings","timestampsInSnapshots","googleAuthProvider","auth","GoogleAuthProvider","facebookAuthProvider","FacebookAuthProvider","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","state","page","foods","loadingFoods","bulkWeight","cutWeight","goal","user","cbulkOpen","dbulkOpen","cutOpen","txtName","txtCalories","txtWeight","txtProtein","isSigninOpen","signinPromptOpen","isTransferOpen","alreadyExists","isDeleting","chartView","getRankedFoods","map","food","index","Infinity","Math","round","sort","a","b","getHighchartConfig","y","getFoods","get","then","doc","exists","foodsDoc","setState","transaction","objectStore","getAll","onsuccess","e","target","result","shouldShowSigninPrompt","supressPrompt","noPromptChk","addFood","updatedFood","Number","isUpdating","set","defineProperty","merge","some","i","put","btnSignin","focus","deleteFood","objectSpread","update","FieldValue","delete","changeGoal","value","sliderChanged","parseFloat","updateVal","editFood","calInput","clearInputs","focusName","nameInput","componentDidUpdate","loadExamples","foodDoc","arrayToDoc","store","forEach","signIn","provider","andLink","signInWithPopup","res","newState","localFoods","linkAndRetrieveDataWithCredential","credential","catch","err","code","newProvider","signinClicked","signOut","noPromptChkChange","checked","clearLocalStore","clear","transferFoods","toggleChart","onAuthStateChanged","collection","uid","request","indexedDB","open","onupgradeneeded","db","objectStoreNames","contains","deleteObjectStore","createObjectStore","keyPath","_this2","location","pathname","props","history","listen","array","keyProp","el","_this3","react_default","createElement","className","Button_default","variant","color","buttonRef","onClick","concat","Popper_default","anchorEl","placement","ClickAwayListener_default","mouseEvent","touchEvent","onClickAway","Fade_default","in","timeout","Paper_default","FormControlLabel_default","control","Checkbox_default","onChange","label","Modal_default","onClose","src","logo","alt","Tabs_default","centered","Tab_default","component","Link","to","Route","path","exact","render","Fragment","CircularProgress_default","Switch_default","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","key","ReactHighcharts_default","config","isPureConfig","RadioGroup_default","row","Radio_default","RootRef_default","rootRef","cbulkHelp","IconButton_default","Help_default","dbulkHelp","cutHelp","colSpan","Edit_default","Delete_default","TextField_default","onInput","inputRef","Save_default","Clear_default","Component","withRouter","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","error","ReactDOM","BrowserRouter","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7df8dba1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.2411d5f0.svg\";","import React, { Component } from 'react';\nimport { Route, Link, withRouter } from 'react-router-dom';\nimport logo from './logo.svg';\nimport './styles/App.css';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport Button from '@material-ui/core/Button';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SaveIcon from '@material-ui/icons/Save';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport HelpIcon from '@material-ui/icons/Help';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Popper from '@material-ui/core/Popper';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Fade from '@material-ui/core/Fade';\nimport Modal from '@material-ui/core/Modal';\nimport Switch from '@material-ui/core/Switch';\n\nimport RootRef from '@material-ui/core/RootRef';\n\nimport Highchart from 'react-highcharts';\n\nfunction highChartSyncHeight() {\n  const chart = this.chart || this;\n\n  let trimCount = 0;\n  const series = [ ...chart.series ];\n  const checkVisible = (s) => !s.visible && ++trimCount;\n  series.every(checkVisible);\n  series.reverse().every(checkVisible);\n\n  const extraHeight = (window.innerWidth < 992 ? chart.legend.legendHeight + 35 : 0);\n  chart.setSize(undefined, (series.length - trimCount) * 30 + extraHeight, false);\n  // TODO: Animate bars\n  // chart.redraw({ duration: 1000 });\n}\n\nconst hiddenFoods = JSON.parse(localStorage.getItem('hiddenFoods')) || [];\n\nlet highChartConfig = {\n  chart: {\n    type: 'bar',\n    marginTop: 0,\n    spacingTop: 0,\n    spacingRight: 0,\n    spacingLeft: 0,\n    events: { load: function() { highChartSyncHeight.call(this) } }\n  },\n  title: null,\n  xAxis: {\n    type: 'category',\n    padding: 0\n  },\n  yAxis: {\n    title: null,\n    endOnTick: false,\n    labels: { enabled: false },\n    tickInterval: 10\n  },\n  colors: ['#3f51b5'],\n  tooltip: {\n    headerFormat: '<span class=\"highcharts-header\">{point.key}</span><br/>',\n    pointFormat: '<b>{point.y}</b>'\n  },\n  plotOptions: {\n    series: {\n      grouping: false,\n      pointWidth: 25,\n      events: {\n        legendItemClick: function() {\n          if (this.visible) {\n            hiddenFoods.push(this.name);\n          }\n          else {\n            hiddenFoods.splice(hiddenFoods.indexOf(this.name), 1);\n          }\n          localStorage.setItem('hiddenFoods', JSON.stringify(hiddenFoods));\n          highChartSyncHeight.call(this)\n        }\n      }\n    }\n  },\n  legend: {\n    layout: 'vertical',\n    align: 'right',\n    verticalAlign: 'top',\n    borderWidth: 1,\n    backgroundColor: '#FFFFFF',\n    shadow: true,\n    symbolWidth: 0,\n    itemMarginTop: 2,\n    itemMarginBottom: 2,\n    title: { text: 'Toggle foods' },\n    navigation: { enabled: false }\n  },\n  credits: {\n    enabled: false\n  },\n  series: [{\n    data: []\n  }],\n  responsive: {\n    rules: [{\n      condition: {\n        maxWidth: 801\n      },\n      chartOptions: {\n        legend: {\n          layout: 'horizontal',\n          align: 'center',\n          verticalAlign: 'bottom',\n          itemMarginTop: 4,\n          itemMarginBottom: 4,\n          margin: 35,\n          padding: 15\n        }\n      }\n    }],\n  }\n};\n\nconst defaults = [\n  { name: 'Pure Protein bar',      calories: 200,  protein: 20,  weight: 50  },\n  { name: 'Egg whites',            calories: 120,  protein: 28,  weight: 252 },\n  { name: 'Ground beef',           calories: 765,  protein: 95,  weight: 450 },\n  { name: 'Snack Pack jello',      calories: 5,    protein: 0,   weight: 99  },\n  { name: 'Potatoes',              calories: 297,  protein: 8,   weight: 400 },\n  { name: 'White rice',            calories: 130,  protein: 7,   weight: 100 },\n  { name: 'Ground turkey',         calories: 590,  protein: 82,  weight: 454 },\n  { name: 'Pepperoni pizza',       calories: 1290, protein: 50,  weight: 537 },\n  { name: 'Breyers Delights',      calories: 280,  protein: 16,  weight: 286 },\n  { name: 'Broccoli',              calories: 34,   protein: 2.8, weight: 100 },\n  { name: 'Doritos',               calories: 528,  protein: 7,   weight: 100 },\n  { name: 'McDonald\\'s apple pie', calories: 270,  protein: 3,   weight: 79  }\n];\n\nlet foodDB;\nlet firebaseDoc;\n\nconst firebase = window.firebase;\nconst firestore = firebase.firestore();\nfirestore.settings({ timestampsInSnapshots: true });\n\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\nconst facebookAuthProvider = new firebase.auth.FacebookAuthProvider();\n\nconst popperFadeMs = 350;\n\nclass App extends Component {\n  state = {\n    page: '/',\n    foods: [],\n    loadingFoods: true,\n    bulkWeight: 0,\n    cutWeight: 1,\n    goal: 'cbulk',\n    user: null,\n    cbulkOpen: false,\n    dbulkOpen: false,\n    cutOpen: false,\n    txtName: '',\n    txtCalories: '',\n    txtWeight: '',\n    txtProtein: '',\n    isSigninOpen: false,\n    signinPromptOpen: false,\n    isTransferOpen: false,\n    alreadyExists: false,\n    isDeleting: {},\n    chartView: false\n  };\n\n  constructor() {\n    super();\n\n    this.state.noPromptChk = JSON.parse(localStorage.getItem('noPromptChk'));\n    this.state.goal = localStorage.getItem('lastGoal') || this.state.goal;\n    this.state.chartView = !!JSON.parse(localStorage.getItem('chartView'));\n\n    firebase.auth().onAuthStateChanged((user) => {\n      this.setState({ user, loadingFoods: true }, () => {\n        if (user) {\n          firebaseDoc = firestore.collection('user_foods').doc(user.uid);\n        }\n        if (foodDB) {\n          this.getFoods();\n          return;\n        }\n        const request = indexedDB.open(\"FoodRank\", 1);\n        request.onsuccess = (e) => {\n          foodDB = e.target.result;\n          this.getFoods();\n        }\n        request.onupgradeneeded = (e) => {\n          const db = e.target.result;\n\n          if (db.objectStoreNames.contains(\"food\")) {\n            db.deleteObjectStore(\"food\");\n          }\n          db.createObjectStore(\"food\", { keyPath: \"name\" });\n        };\n      });\n    });\n  }\n\n  componentWillMount() {\n    this.setState({ page: window.location.pathname });\n    this.props.history.listen((e) => {\n      this.setState({ page: e.pathname });\n    });\n  }\n\n  arrayToDoc(array, keyProp) {\n    const doc = {};\n    array.forEach((el, i) => doc[el[keyProp] || i] = el);\n    return doc;\n  }\n\n  getRankedFoods = () => (\n    this.state.foods.map(food => {\n      let index = !food.calories ? Infinity :\n                  this.state.goal === 'cbulk' ? food.protein / food.calories * 1000 :\n                  this.state.goal === 'dbulk' ? food.protein / food.weight   * 1000 :\n                                                food.weight  / food.calories * 100;\n      index = Math.round(index);\n      return { name: food.name, index }\n    })\n    .sort((a, b) => b.index - a.index)\n  )\n\n  getHighchartConfig = () => {\n    highChartConfig.series = this.getRankedFoods()\n                                 .map((food) => ({\n                                    name: food.name, data: [{ name: food.name, y: food.index }],\n                                    visible: !~hiddenFoods.indexOf(food.name)\n                                  }));\n    return highChartConfig;\n  }\n\n  getFoods = () => {\n    if (this.state.user) {\n      firebaseDoc.get().then((doc) => {\n        if (doc.exists) {\n          const foods = [];\n          const foodsDoc = doc.data();\n          for (const food in foodsDoc) {\n            foods.push(foodsDoc[food]);\n          }\n          this.setState({ foods, loadingFoods: false });\n        }\n      });\n    }\n    else {\n      const trans = foodDB.transaction(\"food\", \"readonly\");\n      trans.objectStore(\"food\").getAll().onsuccess = (e) => {\n        this.setState({ foods: e.target.result, loadingFoods: false });\n      };\n    }\n  }\n\n  shouldShowSigninPrompt = () => !this.state.user && !this.state.supressPrompt && !this.state.noPromptChk;\n\n  addFood = () => {\n    const updatedFood = { name:     this.state.txtName,\n                          calories: Number(this.state.txtCalories) || 0,\n                          weight:   Number(this.state.txtWeight)   || 0,\n                          protein:  Number(this.state.txtProtein)  || 0 }\n\n    this.setState({ isUpdating: true });\n\n    if (this.state.user) {\n      firebaseDoc.set({ [updatedFood.name]: updatedFood }, { merge: true })\n        .then(() => {\n          const foods = [ ...this.state.foods ];\n          const updated = foods.some((food, i) => {\n            if (food.name === updatedFood.name) {\n              foods[i] = updatedFood;\n              return true;\n            }\n          });\n          if (!updated) {\n            foods.push(updatedFood);\n          }\n          this.setState({ txtName: '', txtCalories: '', txtWeight: '', txtProtein: '', foods, isUpdating: false });\n        });\n    }\n    else {\n      foodDB.transaction(\"food\", \"readwrite\")\n            .objectStore(\"food\")\n            .put(updatedFood)\n      .onsuccess = () => {\n        const signinPromptOpen = this.shouldShowSigninPrompt();\n        this.setState({ txtName: '', txtCalories: '', txtWeight: '', txtProtein: '', signinPromptOpen, isUpdating: false });\n        if (signinPromptOpen) {\n          this.btnSignin.focus();\n        }\n        this.getFoods();\n      }\n    }\n  }\n\n  deleteFood = (food) => {\n    const isDeleting = { ...this.state.isDeleting, [food.name]: true };\n    this.setState({ isDeleting });\n    if (this.state.user) {\n      firebaseDoc.update({ [food.name]: firebase.firestore.FieldValue.delete() })\n        .then(() => {\n          const foods = [ ...this.state.foods ];\n          foods.splice(foods.indexOf(food), 1);\n          hiddenFoods.splice(hiddenFoods.indexOf(this.name), 1);\n          localStorage.setItem('hiddenFoods', JSON.stringify(hiddenFoods));\n\n          const isDeleting = { ...this.state.isDeleting, [food.name]: false };\n          this.setState({ foods, isDeleting });\n        });\n    }\n    else {\n      foodDB.transaction(\"food\", \"readwrite\")\n            .objectStore(\"food\")\n            .delete(food.name)\n      .onsuccess = () => {\n        hiddenFoods.splice(hiddenFoods.indexOf(this.name), 1);\n        localStorage.setItem('hiddenFoods', JSON.stringify(hiddenFoods));\n\n        const signinPromptOpen = this.shouldShowSigninPrompt();\n        const isDeleting = { ...this.state.isDeleting, [food.name]: false };\n        this.setState({ signinPromptOpen, isDeleting });\n        if (signinPromptOpen) {\n          this.btnSignin.focus();\n        }\n        this.getFoods();\n      };\n    }\n  }\n\n  changeGoal = (e) => {\n    const goal = e.target.value;\n    if (goal === 'bulk') {\n      this.setState({ bulkWeight: 1, cutWeight: 0, goal });\n    }\n    else if (goal === 'cut') {\n      this.setState({ bulkWeight: 0, cutWeight: 1, goal });\n    }\n    else {\n      this.setState({ bulkWeight: .33, cutWeight: .67, goal });\n    }\n    highChartConfig = { ...highChartConfig };\n    localStorage.setItem('lastGoal', goal);\n  }\n\n  sliderChanged = (e, value) => {\n    const cutWeight = parseFloat(value / 100);\n    this.setState({ bulkWeight: 1 - cutWeight, cutWeight });\n  }\n\n  updateVal = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  editFood = (food) => {\n    this.setState({ txtName: food.name, txtCalories: food.calories, txtWeight: food.weight, txtProtein: food.protein });\n    this.calInput.focus();\n  }\n\n  clearInputs = () => {\n    this.setState({ txtName: '', txtCalories: '', txtWeight: '', txtProtein: '' });\n  }\n\n  focusName = () => {\n    this.nameInput.focus();\n  }\n\n  componentDidUpdate = () => {\n    if (this.state.focusName) {\n      this.focusName();\n      this.setState({ focusName: false });\n    }\n  }\n\n  loadExamples = () => {\n    this.setState({ loadingFoods: true }, () => {\n      if (this.state.user) {\n        const foodDoc = this.arrayToDoc(defaults, 'name');\n        firebaseDoc.set(foodDoc, { merge: true })\n          .then(() => this.getFoods());\n      }\n      else {\n        const store = foodDB.transaction(\"food\", \"readwrite\")\n                            .objectStore(\"food\");\n        defaults.forEach((food) => {\n          store.put(food);\n        });\n        const signinPromptOpen = this.shouldShowSigninPrompt();\n        if (signinPromptOpen) {\n          this.setState({ signinPromptOpen });\n          this.btnSignin.focus();\n        }\n        this.getFoods();\n      }\n    });\n  }\n\n  signIn = (provider, andLink) => {\n    firebase.auth().signInWithPopup(provider)\n      .then((res) => {\n        const newState = { isSigninOpen: false,\n                           alreadyExists: false,\n                           isTransferOpen: !!this.state.foods.length,\n                           localFoods: this.state.foods }; // Preserve prior/local state of foods for transfer\n        if (!andLink) {\n          this.setState(newState);\n        }\n        else {\n          this.setState(newState);\n          res.user.linkAndRetrieveDataWithCredential(this.state.credential);\n        }\n      })\n      .catch((err) => {\n        if (err.code === 'auth/account-exists-with-different-credential') {\n          const newProvider = provider === facebookAuthProvider ? googleAuthProvider\n                                                                : facebookAuthProvider;\n          this.setState({ isSigninOpen: false, alreadyExists: true, credential: err.credential, newProvider });\n        }\n      });\n  }\n\n  signinClicked = () => {\n    if (!this.state.user) {\n      this.setState({ isSigninOpen: true });\n    }\n    else {\n      firebase.auth().signOut();\n    }\n  }\n\n  noPromptChkChange = (e) => {\n    const noPromptChk = e.target.checked;\n    this.setState({ noPromptChk });\n    localStorage.setItem('noPromptChk', noPromptChk);\n  }\n\n  clearLocalStore = () => {\n    foodDB.transaction(\"food\", \"readwrite\").objectStore(\"food\").clear();\n  }\n\n  transferFoods = () => {\n    this.setState({ isTransferOpen: false, loadingFoods: true });\n\n    const foodDoc = this.arrayToDoc(this.state.localFoods, 'name');\n    firebaseDoc.set(foodDoc, { merge: true })\n      .then(() => {\n        this.clearLocalStore();\n        this.getFoods();\n      });\n  }\n\n  toggleChart = (e) => {\n    this.setState({ chartView: e.target.checked });\n    localStorage.setItem('chartView', e.target.checked);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Button className=\"btn-signin\"\n                  variant=\"contained\" color=\"primary\"\n                  buttonRef={(btnSignin) => this.btnSignin = btnSignin}\n                  onClick={this.signinClicked}>{`Sign ${!this.state.user ? 'in' : 'out'}`}</Button>\n          <Popper\n            open={this.state.signinPromptOpen}\n            anchorEl={this.btnSignin}\n            placement=\"bottom-end\"\n          >\n            <ClickAwayListener mouseEvent=\"onClick\" touchEvent={false} onClickAway={() => this.setState({ signinPromptOpen: false, supressPrompt: true })}>\n              <Fade in={this.state.signinPromptOpen} timeout={popperFadeMs}>\n                <Paper className=\"popover\">\n                  <p>Sign in to sync your foods across devices.</p>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={this.state.noPromptChk}\n                        onChange={this.noPromptChkChange}\n                        color=\"primary\"\n                      />\n                    }\n                    label=\"Don't show this again\"\n                  />\n                </Paper>\n              </Fade>\n            </ClickAwayListener>\n          </Popper>\n          <Modal\n            className=\"modal-container\"\n            open={this.state.isSigninOpen}\n            onClose={() => this.setState({ isSigninOpen: false })}\n          >\n            <Paper className=\"modal\">\n              <h2>Sign in</h2>\n              <img src=\"images/signin_google.png\" onClick={() => this.signIn(googleAuthProvider)}/>\n              <img src=\"images/signin_facebook.png\" onClick={() => this.signIn(facebookAuthProvider)}/>\n            </Paper>\n          </Modal>\n          <Modal\n            className=\"modal-container\"\n            open={this.state.alreadyExists}\n            onClose={() => this.setState({ alreadyExists: false })}\n          >\n            <Paper className=\"modal\">\n              <h2>Existing email</h2>\n              <p>Looks like the email associated with that account has already been registered under another provider. You can sign in with that provider instead, or link the two accounts.</p>\n              <div className=\"cta\">\n                <Button variant=\"contained\" color=\"primary\" onClick={() => this.signIn(this.state.newProvider)}>Sign in</Button>\n                <Button variant=\"contained\" color=\"primary\" onClick={() => this.signIn(this.state.newProvider, true)}>Sign in and link</Button>\n              </div>\n            </Paper>\n          </Modal>\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-title\">{'{ FoodRank }'}</h1>\n        </header>\n        <nav>\n          <Tabs value={this.state.page}\n                onChange={(e, i) => this.setState({ page: i })}\n                centered={true}>\n            <Tab label=\"Ranking\" component={Link} to=\"/\" value=\"/\" />\n            <Tab label=\"Foods\" component={Link} to=\"/foods\" value=\"/foods\" />\n          </Tabs>\n        </nav>\n        <main>\n          <Route path=\"/\" exact render={() =>\n            <React.Fragment>\n              {\n                this.state.loadingFoods &&\n                <div className=\"spinner-container\">\n                  <CircularProgress/>\n                </div>\n              }\n              {\n                !this.state.loadingFoods && !this.state.foods.length &&\n                <div className=\"no-foods\">\n                  <div>No foods yet...</div>\n                  <Button variant=\"contained\" component={Link} to=\"/foods\"\n                          onClick={() => this.setState({ focusName: true })}>Add some</Button>\n                </div>\n              }\n              {\n                !this.state.loadingFoods && !!this.state.foods.length &&\n                <div className=\"index-container\">\n                  <div className=\"switch-container\">\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={this.state.chartView}\n                          onChange={this.toggleChart}\n                          color=\"primary\"\n                        />\n                      }\n                      label=\"Chart view\"\n                    />\n                  </div>\n                  {\n                    !this.state.chartView &&\n                    <Paper className=\"table table--index\">\n                      <Table>\n                        <TableHead>\n                          <TableRow>\n                            <TableCell>Food</TableCell>\n                            <TableCell>Index</TableCell>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          {\n                            this.getRankedFoods()\n                            .map(food =>\n                              <TableRow key={food.name}>\n                                <TableCell>{food.name}</TableCell>\n                                <TableCell>{Math.round(food.index)}</TableCell>\n                              </TableRow>\n                            )\n                          }\n                        </TableBody>\n                      </Table>\n                    </Paper>\n                  }\n                  {\n                    this.state.chartView &&\n                    <div className=\"highchart\">\n                      <Highchart config={this.getHighchartConfig()} isPureConfig></Highchart>\n                    </div>\n                  }\n                </div>\n              }\n              <RadioGroup\n                name=\"goal\"\n                className=\"radio-group\"\n                row={true}\n                onChange={this.changeGoal}\n                value={this.state.goal}\n              >\n                <FormControlLabel\n                  value=\"cbulk\"\n                  control={<Radio color=\"primary\"/>}\n                  label=\"Clean bulk\"\n                />\n                <RootRef rootRef={(cbulkHelp) => this.cbulkHelp = cbulkHelp}>\n                  <IconButton onClick={() => this.setState({ cbulkOpen: true })} >\n                    <HelpIcon />\n                  </IconButton>\n                </RootRef>\n                <Popper\n                  open={this.state.cbulkOpen}\n                  anchorEl={this.cbulkHelp}\n                  placement=\"right-start\"\n                >\n                  <ClickAwayListener mouseEvent=\"onClick\" onClickAway={() => this.setState({ cbulkOpen: false })}>\n                    <Fade in={this.state.cbulkOpen} timeout={popperFadeMs}>\n                      <Paper className=\"popover\">\n                        <p>Ranked by ratio of <b>protein/calories</b>.</p>\n                        <p>Foods highest in protein with least caloric impact.</p>\n                      </Paper>\n                    </Fade>\n                  </ClickAwayListener>\n                </Popper>\n                <FormControlLabel\n                  value=\"dbulk\"\n                  control={<Radio color=\"primary\"/>}\n                  label=\"Dirty bulk\"\n                />\n                <RootRef rootRef={(dbulkHelp) => this.dbulkHelp = dbulkHelp}>\n                  <IconButton onClick={() => this.setState({ dbulkOpen: true })} >\n                    <HelpIcon />\n                  </IconButton>\n                </RootRef>\n                <Popper\n                  open={this.state.dbulkOpen}\n                  anchorEl={this.dbulkHelp}\n                  placement=\"right-start\"\n                >\n                  <ClickAwayListener mouseEvent=\"onClick\" onClickAway={() => this.setState({ dbulkOpen: false })}>\n                    <Fade in={this.state.dbulkOpen} timeout={popperFadeMs}>\n                      <Paper className=\"popover\">\n                        <p>Ranked by ratio of <b>protein/weight</b>.</p>\n                        <p>Foods highest in protein with least overall mass.</p>\n                      </Paper>\n                    </Fade>\n                  </ClickAwayListener>\n                </Popper>\n                <FormControlLabel\n                  value=\"cut\"\n                  control={<Radio color=\"primary\"/>}\n                  label=\"Cut\"\n                />\n                <RootRef rootRef={(cutHelp) => this.cutHelp = cutHelp}>\n                  <IconButton onClick={() => this.setState({ cutOpen: true })} >\n                    <HelpIcon />\n                  </IconButton>\n                </RootRef>\n                <Popper\n                  open={this.state.cutOpen}\n                  anchorEl={this.cutHelp}\n                  placement=\"right-start\"\n                >\n                  <ClickAwayListener mouseEvent=\"onClick\" onClickAway={() => this.setState({ cutOpen: false })}>\n                    <Fade in={this.state.cutOpen} timeout={popperFadeMs}>\n                      <Paper className=\"popover\">\n                        <p>Ranked by ratio of <b>weight/calories</b>.</p>\n                        <p>Most filling foods with least caloric impact.</p>\n                      </Paper>\n                    </Fade>\n                  </ClickAwayListener>\n                </Popper>\n              </RadioGroup>\n            </React.Fragment>\n          } />\n          <Route path=\"/foods\" render={() =>\n            <React.Fragment>\n              <div className=\"foods-container\">\n                {\n                  this.state.loadingFoods &&\n                  <div className=\"spinner-container\">\n                    <CircularProgress/>\n                  </div>\n                }\n                {\n                  !this.state.loadingFoods && !this.state.foods.length &&\n                  <div className=\"no-foods\">\n                    <div>No foods yet...</div>\n                    <Button variant=\"contained\" onClick={this.loadExamples} >Load some samples</Button>\n                  </div>\n                }\n                {\n                  !this.state.loadingFoods && !!this.state.foods.length &&\n                  <Paper className=\"table table--foods\">\n                    <Table>\n                      <TableHead>\n                        <TableRow>\n                          <TableCell>Name</TableCell>\n                          <TableCell>Calories</TableCell>\n                          <TableCell>Weight (g)</TableCell>\n                          <TableCell>Protein (g)</TableCell>\n                          <TableCell colSpan={2}></TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {\n                          this.state.foods.map(food =>\n                            <TableRow key={food.name}>\n                              <TableCell>{food.name}</TableCell>\n                              <TableCell>{food.calories}</TableCell>\n                              <TableCell>{food.weight}</TableCell>\n                              <TableCell>{food.protein}</TableCell>\n                              <TableCell>\n                                <IconButton onClick={() => this.editFood(food)} title=\"Edit\">\n                                  <EditIcon />\n                                </IconButton>\n                                <span className={'async-button'+ (this.state.isDeleting[food.name] ? ' async-button--loading' : '') }>\n                                  <CircularProgress className=\"spinner\" />\n                                  <IconButton onClick={() => this.deleteFood(food)} title=\"Delete\">\n                                    <DeleteIcon />\n                                  </IconButton>\n                                </span>\n                              </TableCell>\n                            </TableRow>\n                          )\n                        }\n                      </TableBody>\n                    </Table>\n                  </Paper>\n                }\n              </div>\n              <Paper className=\"table table--add-edit\">\n                <div>\n                  <label className=\"cell head\" >Name</label>\n                  <label className=\"cell\">\n                    <TextField className=\"text-field\" value={this.state.txtName} onInput={this.updateVal} name=\"txtName\"\n                               inputRef={(nameInput) => this.nameInput = nameInput} />\n                  </label>\n                </div>\n                <div>\n                  <span className=\"cell head\">Calories</span>\n                  <div className=\"cell\">\n                    <TextField className=\"text-field\" type=\"number\" value={this.state.txtCalories} onInput={this.updateVal}\n                               name=\"txtCalories\" inputRef={(calInput) => this.calInput = calInput} />\n                  </div>\n                </div>\n                <div>\n                  <span className=\"cell head\">Weight (g)</span>\n                  <div className=\"cell\">\n                    <TextField className=\"text-field\" type=\"number\" value={this.state.txtWeight} onInput={this.updateVal} name=\"txtWeight\" />\n                  </div>\n                </div>\n                <div>\n                  <span className=\"cell head\">Protein (g)</span>\n                  <div className=\"cell\">\n                    <TextField className=\"text-field\" type=\"number\" value={this.state.txtProtein} onInput={this.updateVal} name=\"txtProtein\" />\n                  </div>\n                </div>\n                <div>\n                  <span className=\"cell head\" />\n                  <span className=\"cell action\">\n                    <span className={'async-button'+ (this.state.isUpdating ? ' async-button--loading' : '')}>\n                      <CircularProgress className=\"spinner\" />\n                      <IconButton onClick={this.addFood} title=\"Add/Update\">\n                        <SaveIcon />\n                      </IconButton>\n                    </span>\n                    <IconButton onClick={this.clearInputs} title=\"Clear fields\">\n                      <ClearIcon />\n                    </IconButton>\n                  </span>\n                </div>\n              </Paper>\n            </React.Fragment>\n          } />\n          <Modal\n            className=\"modal-container\"\n            open={this.state.isTransferOpen}\n            onClose={() => this.setState({ isTransferOpen: false })}\n          >\n            <Paper className=\"modal\">\n              <h2>Existing foods</h2>\n              <p>You have some foods saved locally. Would you like them transferred to your account?</p>\n              <div className=\"cta\">\n                <Button variant=\"contained\" color=\"primary\" onClick={this.transferFoods}>Let's do it</Button>\n                <Button variant=\"contained\" color=\"primary\" onClick={() => this.setState({ isTransferOpen: false })}>No thanks</Button>\n              </div>\n            </Paper>\n          </Modal>\n        </main>\n        <img className=\"preload\" src=\"images/signin_google.png\"></img>\n        <img className=\"preload\" src=\"images/signin_facebook.png\"></img>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}